version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: car_rental_postgres
    environment:
      POSTGRES_DB: car_rental
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend-fastapi/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - car_rental_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build: ./backend-fastapi
    container_name: car_rental_backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/car_rental
      - WEB3_PROVIDER_URL=http://host.docker.internal:8545
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    volumes:
      - ./backend-fastapi:/app
      - ./backend-fastapi/contract-address.json:/app/contract-address.json
    networks:
      - car_rental_network
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # React Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: car_rental_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - car_rental_network
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]

volumes:
  postgres_data:

networks:
  car_rental_network:
    driver: bridge